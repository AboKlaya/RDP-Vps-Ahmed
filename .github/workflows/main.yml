name: Windows RDP via Ngrok

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    - name: Download Ngrok v3
      run: |
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath .
        Move-Item .\ngrok.exe C:\ngrok.exe

    - name: Authenticate Ngrok
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        & C:\ngrok.exe config add-authtoken $env:NGROK_AUTH_TOKEN

    - name: Enable RDP Access
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

    - name: Set RDP Password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "@cyb3rking" -Force)

    - name: Start Ngrok Tunnel and Keep Session Alive
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        echo "Starting ngrok..."
        Start-Process -FilePath "C:\ngrok.exe" -ArgumentList "tcp 3389"
        Start-Sleep -Seconds 15
        $try = 0
        while ($true) {
          try {
            $tunnels = Invoke-RestMethod -Uri "http://127.0.0.1:4040/api/tunnels"
            $rdp = $tunnels.tunnels[0].public_url -replace "tcp://", ""
            echo "=============================================="
            echo "✅ RDP Info:"
            echo "IP:PORT => $rdp"
            echo "Username => runneradmin"
            echo "Password => @cyb3rking"
            echo "=============================================="
            break
          } catch {
            if ($try -gt 10) { throw "Failed to get ngrok tunnel after multiple attempts." }
            Start-Sleep -Seconds 5
            $try++
          }
        }
        # إبقاء الاتصال حي لمدة 6 ساعات تقريبًا
        for ($i = 0; $i -lt 360; $i++) {
          Write-Host ">> Session alive for $i minutes"
          Start-Sleep -Seconds 60
        }
